#! /usr/bin/env perl

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin";
use PVS;

# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_f;
our $opt_h;
our $opt_t;

my $usage_str = "";
my $progname = basename($0);
$usage_str .= "Usage: $progname [options] ...\n";

$usage_str .= "-f - print names with lengths\n";
$usage_str .= "-h - print help\n";
$usage_str .= "-t - print total of all lengths\n";

sub usage {
  print STDERR $usage_str;
  exit(@_);
}

my $stat = getopts('fht');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}
if (scalar(@ARGV) > 1) {
  usage(1);
}

# ------------------------------------------------------------------------

my ($file,$nothing) = @ARGV;
if ( !defined($file) ) {
  $file = "-";
}
my %h = PVS::read_fasta($file);

my @keys = sort (keys %h);
if ($#keys == 0 && !$opt_f ) {
  my $k = $keys[0];
  my $v = $h{$k};
  print length($v),"\n";
  exit;
}

if ( $opt_t ) {

  my $total_length = 0;
  foreach my $k ( @keys ) {
    my $v = $h{$k};
    my $l = length($v);
    $total_length += $l;
  }
  print $total_length,"\n";
} else {
  foreach my $k ( @keys ) {
    my $v = $h{$k};
    my $l = length($v);
    if ( $k =~ /gi\|[0-9]+\|ref\|([^\|.]+)/ ) {
      $k = $1;
    }
    print "$l\t$k\n";
  }
}
