#! /usr/bin/env perl

use strict;
use warnings FATAL => 'all';
use Carp::Always;

# use FindBin;
# use lib "$FindBin::Bin";
# use Xyzzy;

use constant { TRUE => 1, FALSE => 0 };

# ------------------------------------------------------------------------
# Process the command line
# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_h;
our $opt_q = FALSE;
our $opt_r = FALSE;

sub usage {
  my $progname = basename($0);
  print STDERR "Usage: $progname [options] < in.paf > out.gff\n";

  print STDERR "-h - print help\n";
  print STDERR "-q - output coordinates relative to query\n";
  print STDERR "-r - output coordinates relative to reference\n";

  print STDERR "Exactly one of -q or -r is required.\n";

  exit(@_);
}

my $stat = getopts('hqr');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}
if (scalar(@ARGV) != 0) {
  usage(1);
}
if ( $opt_q == $opt_r ) {
  usage(1);
}

# ------------------------------------------------------------------------

use constant { NO_VALUE => ";no-value;" };

sub unparse_gff_attributes {
  my ($attributes) = @_;
  my @l;
  foreach my $key (sort (keys %$attributes) ) {
    my $val = $attributes->{$key};
    if ( $val eq NO_VALUE ) {
      push @l, $key;
    } else {
      push @l, $key."=".$val;
    }
  }
  return join(";",@l);
}

use File::Basename;
my $source = basename($0);

my $feature = "misc_feature";

while (<STDIN>) {
  chomp;

  my ($query_id,$q_len,$q_start,$q_end,
      $rel_strand,$subject_id,$s_len,$s_start,$s_end,
      $match,$len,$qual) = split(/\t/);

  my $seqname;
  my $start;
  my $end;
  my $strand;

  if ( $opt_q ) {
    ($seqname,$start,$end,$strand) = ($query_id,$q_start,$q_end,"+");
  } else {
    ( $opt_r ) || die;
    ($seqname,$start,$end,$strand) = ($subject_id,$s_start,$s_end,$rel_strand);
  }
    

  my $score = ".";
  my $frame = ".";
  my $attributes = {
		    match => $match,
		    len => $len,
		    qual => $qual
		   };

  print join("\t",$seqname,$source,$feature,$start,$end,
	     $score,$strand,$frame,unparse_gff_attributes($attributes)),"\n";
}
