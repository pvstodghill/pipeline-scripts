#! /usr/bin/env perl

use strict;
use warnings;
# use Carp::Always;

# use FindBin;
# use lib "$FindBin::Bin";
# use Xyzzy;

use constant { TRUE => 1, FALSE => 0 };

# ------------------------------------------------------------------------
# Process the command line
# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_d = ".";
our $opt_h;
our $opt_x = ".fasta";
our $opt_v;

sub usage {
  my $progname = basename($0);
  print STDERR "Usage: $progname [options] < big.fna \n";

  print STDERR "-d DIR - directory in which to write FASTA files [$opt_d]\n";
  print STDERR "-h - print help\n";
  print STDERR "-v - drop version number from accession when creating files\n";
  print STDERR "-x EXT - extension for FASTA files [$opt_x]\n";

  exit(@_);
}

my $stat = getopts('d:hvx:');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}

if ( ! -e $opt_d ) {
  print STDERR "Directory does not exist: <<$opt_d>>\n";
  exit(1);
}
if ( $opt_d !~ /\/$/ ) {
  $opt_d .= "/";
}

# ------------------------------------------------------------------------
# Read STDIN and split
# ------------------------------------------------------------------------

my $fh;

while (<STDIN>) {
  chomp;
  $_ =~ s/\r+//;
  if ( /^>([^ ]*)/ ) {
    if (defined($fh)) {
      close $fh || die;
    }
    my $name = $1;
    ($name ne "") || die;
    $name =~ s/^(gb|gnl\|Prokka|lcl)[|]//;
    $name =~ s/[|].*//;
    if ($opt_v) {
      $name =~ s/\.[0-9]+$//;
    }

    my $safe_name = $name;
    $safe_name =~ s|[:/]+|__|g;
    if ( $name ne $safe_name ) {
      print STDERR "# Replacing \"$name\" with \"$safe_name\"\n";
    }

    my $filename = join('',$opt_d,$safe_name,$opt_x);
    open($fh,">",$filename) || die "cannot open for writing <<$filename>>,"
  }
  (defined($fh)) || die;
  print $fh $_,"\n";
}

if (defined($fh)) {
  close $fh || die;
}
