#! /usr/bin/env perl

use strict;
use feature 'postderef';
use warnings FATAL => 'all';
no warnings "experimental::postderef";
#use Carp::Always;

# use FindBin;
# use lib "$FindBin::Bin";
# use Xyzzy;

use constant { TRUE => 1, FALSE => 0 };

# 'wide character' warning.
binmode(STDIN, ":utf8");
binmode(STDOUT, ":utf8");

# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_h;

my $usage_str = "";
my $progname = basename($0);
$usage_str .= "Usage: $progname [options]\n";

$usage_str .= "-h - print help\n";

sub usage {
  print STDERR $usage_str;
  exit(@_);
}

my $stat = getopts('h');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}
if (scalar(@ARGV) != 0) {
  usage(1);
}

# ------------------------------------------------------------------------

use constant { NO_VALUE => ";no-value;" };

sub parse_gff_attributes {
  my ($raw_attributes) = @_;
  my $attributes = {};
  foreach my $key_val (split(/; */,$raw_attributes)) {
    my ($key,$val);
    if ( $key_val =~ /^([^=]+)=(.*)/ ) {
      ($key,$val) = ($1,$2);
    } else {
      ($key,$val) = ($key_val, NO_VALUE);
    }
    $attributes->{$key} = $val;
  }
  return $attributes;
}

sub unparse_gtf_attributes {
  my ($attributes) = @_;
  my @l;
  foreach my $key (sort (keys %$attributes) ) {
    my $val = $attributes->{$key};
    if ( $val eq NO_VALUE ) {
      push @l, $key.'""'.$val;
    } else {
      if ( $val eq "" ) {
	$val = '""';
      } elsif ( $val =~ /[ "'\\]/ ) {
	$val = '"'.$val.'"';
      }
      push @l, $key." ".$val;
    }
  }
  return join(";",@l);
}

# ------------------------------------------------------------------------

while (<STDIN>) {
  chomp;
  if (/^#/) {
    next;
  }
  my ($accession,$source,$feature,$start,$end,
      $score,$strand,$frame,$raw_attributes) = split(/\t/,$_);
  my $attributes = parse_gff_attributes($raw_attributes);
  if (defined($attributes->{gene_id})) {
    ;
  } elsif (defined($attributes->{ID})) {
    $attributes->{gene_id} = $attributes->{ID};
  } else {
    die;
  }
  print join("\t",$accession,$source,$feature,$start,$end,
	     $score,$strand,$frame,unparse_gtf_attributes($attributes)),"\n";
}

